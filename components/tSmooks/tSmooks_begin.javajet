/*******************************************************************************
 * Copyright (c) 2009 SOPERA GmbH
 * All rights reserved. 
 * This program and the accompanying materials are made available
 * under the terms of the GNU Lesser General Public License v 3.0
 * which accompanies this distribution, and is available at
 * http://www.gnu.org/licenses/lgpl-3.0.txt
 ******************************************************************************/
<%@ jet 
	imports="
		org.talend.core.model.process.INode 
		org.talend.core.model.process.ElementParameterParser 
		org.talend.core.model.metadata.IMetadataTable 
		org.talend.core.model.metadata.IMetadataColumn 
		org.talend.core.model.process.IConnection
		org.talend.core.model.process.IConnectionCategory
		org.talend.designer.codegen.config.CodeGeneratorArgument
		org.talend.core.model.metadata.types.JavaTypesManager
		org.talend.core.model.metadata.types.JavaType
		java.util.List 
    	java.util.Map
    		
	" 
%>
<% 
    CodeGeneratorArgument codeGenArgument = (CodeGeneratorArgument) argument;
    INode node = (INode)codeGenArgument.getArgument();
    String cid = node.getUniqueName();	
    String inputFileName = ElementParameterParser.getValue(node, "__INPUT_FILE__");
    String mappingFileName = ElementParameterParser.getValue(node, "__MAPPING_FILE__");
    String outputFileName = ElementParameterParser.getValue(node, "__OUTPUT_FILE__");
    List<Map<String, String>> paths = (List<Map<String,String>>)ElementParameterParser.getObjectValue(node, "__PATH__");
%>
   org.sopera.di.smooks.impl.SmooksTransformImpl smooksTransformImpl_<%=cid%> = 
   		new org.sopera.di.smooks.impl.SmooksTransformImpl();
   smooksTransformImpl_<%=cid%>.setConfigFileName(<%=mappingFileName%>);
   
<%    
    for(Map<String, String> pathMap : paths) {
    	String target = pathMap.get("TARGET");
    	String source = pathMap.get("SOURSE");
    	boolean useInMap = pathMap.get("USE_IN_MAP").equals("true");
    
%>
	smooksTransformImpl_<%=cid%>.setMappingResource(<%=target%>,<%=source%>);
<%
	} 
%>

   System.out.println("Begin in process!");

   smooksTransformImpl_<%=cid%>.setInputFileName(<%=inputFileName%>);
   smooksTransformImpl_<%=cid%>.setOutputFileName(<%=outputFileName%>);
   smooksTransformImpl_<%=cid%>.runSmooksTransform();
 